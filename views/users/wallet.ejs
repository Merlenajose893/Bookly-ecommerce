<%- include('../../views/partials/profileHeader.ejs') -%>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<style>
        body {
            background-color: #f5f5f5;
        }
        .sidebar-link {
            color: #666;
            text-decoration: none;
            transition: color 0.3s;
            padding: 8px 0;
            display: block;
        }
        .sidebar-link:hover {
            color: #333;
        }
        .sidebar-link.active {
            background-color: #f8d7da;
            margin: 0 -1rem;
            padding: 8px 1rem;
        }

        .sidebar-menu li {
            cursor: pointer;
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .sidebar-menu li:hover {
            background-color: #f5f5f5;
        }

        .sidebar-menu li.active {
            background-color: #e6bfbf;
            color: #333;
        }

        .wallet-card {
            background-color: #1e3050;
            color: white;
            border-radius: 15px;
            padding: 20px;
        }

        .card-number {
            letter-spacing: 3px;
            font-size: 24px;
        }

        .btn-teal {
            background-color: #008374;
            color: white;
        }

        .btn-teal:hover {
            background-color: #006d61;
            color: white;
        }

        .newsletter {
            background-color: #e6bfbf;
        }
    </style>
</head>
<body>
   

            <!-- Main Content -->
            <div class="col-md-9">
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <h5 class="card-title bg-light p-3 rounded mb-4">Wallet</h5>
            
                        <!-- Wallet Card -->
                        <div class="wallet-card mb-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <% if (wallet) { %>
                                    <h3 class="mb-0">‚Çπ<%= wallet.balance %></h3>
                                <% } else { %>
                                    <h3 class="mb-0 text-danger">No wallet found</h3>
                                <% } %>
                            </div>
                        </div>
            
                        <!-- Add Amount Section -->
                        <% if (wallet) { %>
                            <div class="mt-4">
                                <form id="paymentForm">
                                <label class="form-label">Add Amount</label>
                                <input type="number" class="form-control mb-3" placeholder="Enter amount" id="amount">
                                <div class="d-flex gap-2">
                                  <!-- Change button type and form -->
                            <form id="paymentForm" onsubmit="return false">
                                 <button type="button" class="btn btn-teal" id="rzp-btn">Add Money</button>
                            </form>
                                </div>
                            </form>
                            </div>
            
                            <h5 class="mt-4">Transactions</h5>
                            <table class="table table-striped mt-3">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Amount</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% transactions.forEach((transaction, index) => { %>
                                        <tr>
                                            <td><%= (currentPage - 1) * itemsPerPage + index + 1 %></td>
                                            <td>‚Çπ<%= transaction.amount %></td>
                                            <td><%= transaction.createdAt.toDateString() %></td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        <% } else { %>
                            <p class="text-muted">No wallet found. Please add money to create a wallet.</p>
                        <% } %>
                        <nav>
                            <ul class="pagination justify-content-center mt-3">
                                <!-- Previous Button -->
                                <li class="page-item <%= currentPage == 1 ? 'disabled' : '' %>">
                                    <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                        
                                <!-- Page Numbers -->
                                <% for (let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= i == currentPage ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                        
                                <!-- Next Button -->
                                <li class="page-item <%= currentPage == totalPages ? 'disabled' : '' %>">
                                    <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        
            
                    </div>
                </div>
            </div>
            
        </div>
        <!--  -->

        <!-- Newsletter -->
        <div class="newsletter rounded p-4 mt-5">
            <div class="row align-items-center">
                <div class="col-md-4">
                    <div class="d-flex align-items-center gap-2">
                        <span>‚úâÔ∏è</span>
                        <span>Sign in to Newsletter</span>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="input-group">
                        <input type="email" class="form-control" placeholder="Enter Your Email">
                        <button class="btn btn-dark">Subscribe</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="bg-light mt-5 py-5">
            <div class="row g-4">
                <div class="col-lg-4">
                    <h2 class="h4 mb-3">Bookly</h2>
                    <p class="text-secondary">
                        Discover stories and knowledge in every book.<br>
                        From timeless classics to trending new releases, Bookly<br>
                        brings you the best selection.<br>
                        Your next great read is just a click away!
                    </p>
                </div>

                <div class="col-lg-4">
                    <h3 class="h5 mb-3">HELP</h3>
                    <ul class="list-unstyled">
                        <li class="mb-2"><a href="#" class="text-secondary text-decoration-none">Track Order</a></li>
                        <li class="mb-2"><a href="#" class="text-secondary text-decoration-none">Returns</a></li>
                        <li class="mb-2"><a href="#" class="text-secondary text-decoration-none">Shipping</a></li>
                        <li class="mb-2"><a href="#" class="text-secondary text-decoration-none">FAQs</a></li>
                    </ul>
                </div>

                <div class="col-lg-4">
                    <div class="text-secondary">
                        <p class="mb-2">üìç 123 Street, New York, USA</p>
                        <p class="mb-2">‚úâÔ∏è info@example.com</p>
                        <p class="mb-2">üìû +012 345 67890</p>
                    </div>
                    <div class="text-secondary mt-4">
                        ¬© 2024 Bookly. All Rights Reserved.
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!--  -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
      document.getElementById('rzp-btn').addEventListener('click', async function () {
        try {
          const amount = document.getElementById('amount').value.trim();
          const numericAmount = Number(amount);
    
          if (!numericAmount || numericAmount <= 0 || isNaN(numericAmount)) {
            Swal.fire({
              title: 'Error',
              text: 'Please enter a valid amount',
              icon: 'error',
            });
            return;
          }
    
          // Show loading state
          const swalInstance = Swal.fire({
            title: 'Processing Payment',
            html: 'Please wait while we prepare your payment...',
            allowOutsideClick: false,
            didOpen: () => {
              Swal.showLoading();
            }
          });
    
          // Create order
          const response = await fetch('/add-money', {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ amount: numericAmount })
          });
    
          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    
          const data = await response.json();
          console.log('Order creation response:', data);
    
          if (!data.success) {
            await Swal.fire({
              title: 'Error',
              text: data.message || 'Failed to create payment order',
              icon: 'error',
            });
            return;
          }
    
          // Close loading state
          swalInstance.close();
    
          // Initialize Razorpay with complete options
          const options = {
            key: data.key_id, // Your Razorpay key
            amount: data.amount, // 18000 paise = ‚Çπ180
            currency: data.currency || 'INR',
            name: 'Your Company Name', // Customize this
            description: `Payment for ‚Çπ${numericAmount}`,
            order_id: data.orderId, // From your backend response
            handler: async function (response) {
              console.log('Payment success:', response);
              try {
                const verifyResponse = await fetch('/verify-payment', {
                  method: 'POST',
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    amount: data.amount
                  })
                });
                
                const verifyData = await verifyResponse.json();
                
                if (verifyData.success) {
                  await Swal.fire({
                    title: 'Success!',
                    text: `‚Çπ${numericAmount} added to your wallet`,
                    icon: 'success'
                  });
                  window.location.reload();
                } else {
                  throw new Error(verifyData.message || 'Payment verification failed');
                }
              } catch (error) {
                console.error('Verification error:', error);
                await Swal.fire({
                  title: 'Verification Failed',
                  text: error.message,
                  icon: 'error'
                });
              }
            },
            prefill: {
              name: 'Customer Name', // Dynamically populate if available
              email: 'customer@example.com',
              contact: '9000000000'
            },
            theme: {
              color: '#3399cc'
            }
          };
    
          const rzp = new Razorpay(options);
          
          // Handle payment failures
          rzp.on('payment.failed', function (response) {
            console.error('Payment failed:', response.error);
            Swal.fire({
              title: 'Payment Failed',
              text: response.error.description || 'Payment could not be completed',
              icon: 'error'
            });
          });
    
          rzp.open();
    
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            title: 'Error',
            text: error.message || 'Something went wrong',
            icon: 'error'
          });
        }
      });
    </script>

</body>
</html>