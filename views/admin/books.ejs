<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
    <!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">

<!-- Cropper.js JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css" integrity="sha512-hvNR0F/e2J7zPPfLC9auFe3/SE0yG4aJCOd/qxew74NN7eyiSKjr7xJJMu1Jy2wf7FXITpWS1E/RY8yzuXN7VA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
   <link rel="stylesheet" href="/css/bookss.css">
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
   <link
  href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
  rel="stylesheet"
/>
<link
  href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
  rel="stylesheet"
/>

</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar">
                <h3 class="mb-4">Bookly</h3>
                <nav class="nav flex-column">
                    <a class="nav-link" href="/admin">Dashboard</a>
                    <a class="nav-link" href="/admin/usermanage">User Management</a>
                    <a class="nav-link active" href="/admin/books">Book Management</a>
                    <a class="nav-link" href="/admin/genres">Category Management</a>
                    <a class="nav-link" href="/admin/adminorders">Order Management</a>
                    <a class="nav-link" href="/admin/coupon">Coupon Management</a>
                    <a class="nav-link" href="/admin/offer">Offer Management</a>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="col-md-10 main-container">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                       <input type="button" value="<%=searchQuery%>"><!-- Add form wrapper with GET method -->

                    </div>
                    <div>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">Create</button>
                        <span class="status-indicator status-online"></span>
                        <span class="status-indicator status-offline"></span>
                    </div>
                </div>
                <div class="modal fade" id="createModal" data-bs-backdrop="static" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Add book</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <form action="/admin/books" method="POST" enctype="multipart/form-data" >
                                    <div class="mb-3">
                                        <label for="bookName" class="form-label">ISBN</label>
                                        <input type="text" id="isbn" class="form-control" name="isbn">
                                    </div>
                                    <div id="isbn-error" class="error-message"></div>
                                    <div class="mb-3">
                                        <label for="bookName" class="form-label">Title</label>
                                        <input type="text" id="title"class="form-control" name="title" >
                                    </div>
                                    <div id="title-error" class="error-message"></div>
                                    
                                  <div class="mb-3">
                                    <label for="bookName" class="form-label">Author</label>
                                    <input type="text" id="author" class="form-control" name="author" >
                                </div>
                                <div id="author-error" class="error-message"></div>
                                <div class="mb-3">
                                    <label for="bookName" class="form-label">Publisher</label>
                                    <input type="text" id="publisher" class="form-control" name="publisher" >
                                </div>
                                <div id="publisher-error" class="error-message"></div>
                                <div class="mb-3">
                                    <label for="bookName" class="form-label">Formats</label>
                                    <input type="text" id="formats" class="form-control" name="formats" >
                                </div>
                                <div id="formats-error" class="error-message"></div>
                                <div class="form-group">
                                    <label for="genre">Genre</label>
                                    <select class="form-select" id="genre" name="books[genre]" >
                                      <% genres.forEach(function(genre) { %>
                                        <option value="<%= genre._id %>"><%= genre.name %></option>
                                      <% }); %>
                                    </select>
                                  </div>
                                  <div id="genre-error" class="error-message"></div>

                              <div class="mb-3">
                                <label for="bookName" class="form-label">Regular Price</label>
                                <input type="text" id="regularPrice" class="form-control" name="regularPrice" >
                            </div>
                            <div id="regularPrice-error" class="error-message"></div>
                            <div class="mb-3">
                              <label for="bookName" class="form-label">Sales Price</label>
                              <input type="text" id="salesPrice" class="form-control" name="salesPrice" >
                          </div>
                          <div id="salesPrice-error" class="error-message"></div>
                          <div class="mb-3">
                            <label for="stockInput" class="form-label">Stock</label>
                            <input 
                              type="number" 
                              id="stockInput" 
                              class="form-control" 
                              name="quantity" 
                              value="<%= books.quantity %>"
                              oninput="validateStock()">
                            <div id="stockInput-error" class="error-message text-danger" style="display: none;"></div>
                            <p id="stockStatus" class="mt-2"></p>
                          </div>
                        
                        <div class="mb-3">
                          <label for="bookName" class="form-label">Description</label>
                          <input type="text" id="bookName" class="form-control" name="description" >
                        </div> 
                        <div id="description-error" class="error-message"></div>
                        <div class="card-body">
                            <!-- Image 1 -->
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                              <!-- Add hidden-preview class so this image stays off-screen -->
                              <img src="" alt="" id="imgView1" class="hidden-preview">
                              <input
                                class="form-control"
                                type="file"
                                name="image1"
                                id="input1"
                                accept="image/png, image/jpeg, image/jpg"
                              />
                            </div>
                            <div id="images-error" class="error-message"></div>
                            <div
                              class="image-cropper d-flex align-items-center"
                              id="croppedContainer1"
                              style="display:none; width: 300px; height: 200px; margin-bottom: 20px;"
                            >
                              <img
                                src=""
                                id="croppedImg1"
                                alt=""
                                style="width: 100%; height: 100%;"
                              />
                              <button
                                type="button"
                                id="saveButton1"
                                class="btn-sm btn-primary"
                                style="margin-left: 10px;"
                              >
                                Save
                              </button>
                            </div>
                          
                            <!-- Image 2 -->
                            <div class="row">
                              <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView2" class="hidden-preview">
                                <input
                                  class="form-control"
                                  type="file"
                                  name="image2"
                                  id="input2"
                                  accept="image/png, image/jpeg, image/jpg"
                                />
                              </div>
                              <div
                                class="image-cropper d-flex align-items-center"
                                id="croppedContainer2"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;"
                              >
                                <img
                                  src=""
                                  id="croppedImg2"
                                  alt=""
                                  style="width: 100%; height: 100%;"
                                />
                                <button
                                  type="button"
                                  id="saveButton2"
                                  class="btn-sm btn-primary"
                                  style="margin-left: 10px;"
                                >
                                  Save
                                </button>
                              </div>
                            </div>
                          
                            <!-- Image 3 -->
                            <div class="row">
                              <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView3" class="hidden-preview">
                                <input
                                  class="form-control"
                                  type="file"
                                  name="image3"
                                  id="input3"
                                  accept="image/png, image/jpeg, image/jpg"
                                />
                              </div>
                              <div
                                class="image-cropper d-flex align-items-center"
                                id="croppedContainer3"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;"
                              >
                                <img
                                  src=""
                                  id="croppedImg3"
                                  alt=""
                                  style="width: 100%; height: 100%;"
                                />
                                <button
                                  type="button"
                                  id="saveButton3"
                                  class="btn-sm btn-primary"
                                  style="margin-left: 10px;"
                                >
                                  Save
                                </button>
                              </div>
                            </div>
                          
                            <!-- Image 4 -->
                            <div class="row">
                              <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView4" class="hidden-preview">
                                <input
                                  class="form-control"
                                  type="file"
                                  name="image4"
                                  id="input4"
                                  accept="image/png, image/jpeg, image/jpg"
                                />
                              </div>
                              <div
                                class="image-cropper d-flex align-items-center"
                                id="croppedContainer4"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;"
                              >
                                <img
                                  src=""
                                  id="croppedImg4"
                                  alt=""
                                  style="width: 100%; height: 100%;"
                                />
                                <button
                                  type="button"
                                  id="saveButton4"
                                  class="btn-sm btn-primary"
                                  style="margin-left: 10px;"
                                >
                                  Save
                                </button>
                              </div>
                            </div>
                          </div>
                          
                        
                        
                        
                    </div>
                    <div>


                        <hr>


                                    <button type="submit" class="btn btn-primary" onsubmit="return validateBookForm()">Submit</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Products Table -->
                <div class="table-responsive mb-4">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Category</th>
                                <th>Title</th>
                                <th>salesPrice</th>
                                <th>regularPrice</th>
                                <th>Stock</th>
                                <th>View</th>
                                <th>Update</th>
                                <th>Delete</th>
                               
                              
                            </tr>
                        </thead>
                        <tbody>
                            <% books.forEach((book) => { %>
                            <tr>
                                <td>
                                    <% if (book.images && book.images.length > 0) { %>
                                    <img src="/uploads/<%= book.images[0].split('/').pop() %>" alt="Book Image" class="img-fluid" style="max-width: 50px; max-height: 70px; object-fit: contain;">
                                    <% } else { %>
                                    <p class="text-muted">No image</p>
                                    <% } %>
                                </td>
                               
                                <td class="white">
                                    <% if (book.genres && book.genres.length > 0) { %>
                                      <%= book.genres.map(genre => genre.name).join(', ') %>
                                    <% } else { %>
                                      <em>No genres available</em>
                                    <% } %>
                                  </td>
                                  
                                  
                                <td class="white"><%= book.title %></td>
                             
                                
                                <td class="white">₹<%= book.salesPrice %></td>
                                <td class="white">₹<%= book.regularPrice %></td>
                                <td class="white">
                                    <% if (book.quantity === 0) { %>
                                        <span class="green">Out of Stock</span>
                                    <% } else { %>
                                        <span class="green"><%= book.quantity %></span>
                                    <% } %>
                                </td>
                                
                                
                 

                            <td>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#viewModal<%= book.id %>">View</button>
                                <!-- View Modal -->
                                <div class="modal fade" id="viewModal<%= book.id %>" tabindex="-1">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">book Details</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div>
                                                    <strong>Images:</strong>
                                                    <div
                                                        style="display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px;">
                                                        <% if (book.images && book.images.length> 0) { %>
                                                            <% book.images.forEach(function(image) { %>
                                                                <img src="/uploads/<%= image.split('/').pop() %>"
                                                                    alt="Book Image"
                                                                    style="width: 100px; height: 100px; object-fit: cover; border: 1px solid #ccc;">
                                                                <% }); %>
                                                                    <% } else { %>
                                                                        <p>No images available</p>
                                                                        <% } %>
                                                    </div>

                                                <!--<p><strong></strong> <%= book.image %></p> -->
                                                <p><strong>ISBN:</strong><%=book.isbn%></p>
                                                <p><strong>Name:</strong> <%= book.title %></p>
                                                <p><strong>Author:</strong> <%= book.author %></p>
                                                <p><strong>Publisher</strong><%=book.publisher%></p>
                                                <p><strong>Format:</strong><%=book.formats%></p>
                                                <p><strong>Category:</strong>
                                                    <% if (book.genres && book.genres.length > 0) { %>
                                                        <%= book.genres.map(genre => genre.name).join(', ') %>
                                                    <% } else { %>
                                                        No genres available
                                                    <% } %>
                                                </p>
                                                
                                                <p><strong>Regular Price:</strong> <%= book.regularPrice %></p>
                                                <p><strong>Sales Price:</strong> <%= book.salesPrice%></p>
                                                <p><strong>Stock:</strong> 
                                                    <% if (book.quantity === 0) { %>
                                                        <span>Out of Stock</span>
                                                    <% } else { %>
                                                        <span><%= book.quantity %></span>
                                                    <% } %>
                                                </p>
                                                
                                                <p><strong>Description:</strong> <%= book.description %></p>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateModal<%= book.id %>">Update</button>
                                <!-- Update Modal -->
                                <div class="modal fade" id="updateModal<%= book.id %>" tabindex="-1">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Update Book</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                <form action="/admin/books/<%=book.id%>/update" method="POST" enctype="multipart/form-data">
                                                    <input type="hidden" name="id" value="<%= book._id %>">
                                                    <!-- Book fields -->
                                                    <div class="mb-3">
                                                        <label for="isbn" class="form-label">ISBN</label>
                                                        <input type="text" id="isbn" class="form-control" name="isbn" value="<%= book.isbn %>" >
                                                    </div>
                                                    <div id="isbn-error" class="error-message"></div>
                                                    <div class="mb-3">
                                                        <label for="title" class="form-label">Title</label>
                                                        <input type="text" id="title" class="form-control" name="title" value="<%= book.title %>" >
                                                    </div>
                                                    <div id="title-error" class="error-message"></div>

                                                    <div class="mb-3">
                                                        <label for="author" class="form-label">Author</label>
                                                        <input type="text" id="author" class="form-control" name="author" value="<%= book.author %>" >
                                                    </div>
                                                    <div id="author-error" class="error-message"></div>
                                                    <div class="mb-3">
                                                        <label for="publisher" class="form-label">Publisher</label>
                                                        <input type="text" id="publisher" class="form-control" name="publisher"value="<%= book.publisher%>" >
                                                    </div>
                                                    <div id="publisher-error" class="error-message"></div>
                                                    <div class="mb-3">
                                                        <label for="formats" class="form-label">Formats</label>
                                                        <input type="text" id="formats" class="form-control" name="formats" value="<%= book.formats %>">

                                                    </div>
                                                    <div id="formats-error" class="error-message"></div>
                                                    <div class="mb-3">
                                                        <label for="description" class="form-label">Description</label>
                                                        <input type="text" id="description" class="form-control" name="description"value="<%= book.description %>">
                                                    </div>
                                                    <div id="description-error" class="error-message"></div>
                                                    <div class="col-md-6 mb-3">
                                                        <label for="genre" class="form-label">Genre</label>
                                                        <select class="form-select" id="genre" name="genre" >
                                                            <% genres.forEach(function(genre) { %>
                                                                <option value="<%= genre._id %>" <%= book.genres.some(g => g._id.toString() === genre._id.toString()) ? 'selected' : '' %>>
                                                                    <%= genre.name %>
                                                                </option>
                                                            <% }); %>
                                                        </select>
                                                    </div>
                                                    <div id="genre-error" class="error-message"></div>
                                                    
                                <div class="mb-3">
                                    <label for="bookName" class="form-label">Regular Price</label>
                                    <input type="number" id="bookName" class="form-control" name="regularPrice" value="<%= book.regularPrice %>"
                                    >

                                </div>
                                <div id="regularPrice-error" class="error-message"></div>
                                                                        
                                <div class="mb-3">
                                    <label for="bookName" class="form-label">Sales Price</label>
                                    <input type="number" id="bookName" class="form-control" name="salesPrice" value="<%= book.salesPrice%>"
                                    >
                                </div>
                                <div id="salesPrice-error" class="error-message"></div>
                                <div class="mb-3">
                                    <label for="bookName" class="form-label">Stock</label>
                                    <input type="number" id="bookName" class="form-control" name="quantity" value="<%= book.quantity%>"
                                    >
                                </div>
                                <div id="quantity-error" class="error-message text-danger" style="display: none;"></div>
                                                    <!-- Existing images -->
                                                    <div>
                                                        <% if (book.images && book.images.length) { %>
                                                          <div class="mb-3">
                                                            <label class="form-label">Current Images</label>
                                                            <div class="row">
                                                              <% book.images.forEach((image, index) => { %>
                                                                <div class="col-md-3">
                                                                  <div class="position-relative">
                                                                    <img src="/uploads/<%= image.split('/').pop() %>" 
                                                                         alt="Image <%= index + 1 %>" 
                                                                         class="img-fluid border shadow-sm current-image mb-2" 
                                                                         style="cursor: pointer;" 
                                                                         data-bs-toggle="modal" 
                                                                         data-bs-target="#imageModal" 
                                                                         data-image="/uploads/<%= image.split('/').pop() %>">
                                                                         <button class="btn btn-danger btn-sm position-absolute top-0 end-0" 
                                                                         onclick="deleteImage('<%= image %>', '<%= book._id %>')">Delete</button>
                                                                 
                                                                  </div>
                                                                </div>
                                                              <% }) %>
                                                            </div>
                                                          </div>
                                                        <% } %>
                                                      </div>
                                                      
                                                      
                                                      
                                                      <!-- Modal for displaying the image -->
                                                      <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
                                                        <div class="modal-dialog modal-dialog-centered">
                                                          <div class="modal-content">
                                                            <div class="modal-header">
                                                              <h5 class="modal-title" id="imageModalLabel">Image Preview</h5>
                                                              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                            </div>
                                                            <div class="modal-body">
                                                              <img id="modalImage" src="" alt="Preview" class="img-fluid">
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </div>
                                                   
                                                      <div class="container mt-4">
                                                        <!-- Image 1 -->
                                                        <div class="card mb-4">
                                                          <div class="card-header">Upload and Crop Image 1</div>
                                                          <div class="card-body">
                                                            <!-- Original Image Preview (for cropping) -->
                                                            <div class="mb-3">
                                                              <img id="imgView1" src="" alt="Image Preview" style="display:none; max-width: 100%; border: 1px solid #ccc;">
                                                            </div>
                                                            <!-- File Input -->
                                                            <div class="mb-3">
                                                              <input class="form-control" type="file" name="image1" id="input1" accept="image/*">
                                                            </div>
                                                            <!-- Cropper Container & Cropped Image Preview -->
                                                            <div id="croppedContainer1" class="image-cropper d-flex align-items-center justify-content-center flex-column" style="display:none;">
                                                              <img id="croppedImg1" src="" alt="Cropped Image" style="display:none; max-width: 100%; border: 1px solid #ccc; margin-bottom: 10px;">
                                                              <button type="button" id="saveButton1" class="btn btn-primary">Save Cropped Image</button>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      
                                                        <!-- Image 2 -->
                                                        <div class="card mb-4">
                                                          <div class="card-header">Upload and Crop Image 2</div>
                                                          <div class="card-body">
                                                            <div class="mb-3">
                                                              <img id="imgView2" src="" alt="Image Preview" style="display:none; max-width: 100%; border: 1px solid #ccc;">
                                                            </div>
                                                            <div class="mb-3">
                                                              <input class="form-control" type="file" name="image2" id="input2" accept="image/*">
                                                            </div>
                                                            <div id="croppedContainer2" class="image-cropper d-flex align-items-center justify-content-center flex-column" style="display:none;">
                                                              <img id="croppedImg2" src="" alt="Cropped Image" style="display:none; max-width: 100%; border: 1px solid #ccc; margin-bottom: 10px;">
                                                              <button type="button" id="saveButton2" class="btn btn-primary">Save Cropped Image</button>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      
                                                        <!-- Image 3 -->
                                                        <div class="card mb-4">
                                                          <div class="card-header">Upload and Crop Image 3</div>
                                                          <div class="card-body">
                                                            <div class="mb-3">
                                                              <img id="imgView3" src="" alt="Image Preview" style="display:none; max-width: 100%; border: 1px solid #ccc;">
                                                            </div>
                                                            <div class="mb-3">
                                                              <input class="form-control" type="file" name="image3" id="input3" accept="image/*">
                                                            </div>
                                                            <div id="croppedContainer3" class="image-cropper d-flex align-items-center justify-content-center flex-column" style="display:none;">
                                                              <img id="croppedImg3" src="" alt="Cropped Image" style="display:none; max-width: 100%; border: 1px solid #ccc; margin-bottom: 10px;">
                                                              <button type="button" id="saveButton3" class="btn btn-primary">Save Cropped Image</button>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      
                                                        <!-- Image 4 -->
                                                        <div class="card mb-4">
                                                          <div class="card-header">Upload and Crop Image 4</div>
                                                          <div class="card-body">
                                                            <div class="mb-3">
                                                              <img id="imgView4" src="" alt="Image Preview" style="display:none; max-width: 100%; border: 1px solid #ccc;">
                                                            </div>
                                                            <div class="mb-3">
                                                              <input class="form-control" type="file" name="image4" id="input4" accept="image/*">
                                                            </div>
                                                            <div id="croppedContainer4" class="image-cropper d-flex align-items-center justify-content-center flex-column" style="display:none;">
                                                              <img id="croppedImg4" src="" alt="Cropped Image" style="display:none; max-width: 100%; border: 1px solid #ccc; margin-bottom: 10px;">
                                                              <button type="button" id="saveButton4" class="btn btn-primary">Save Cropped Image</button>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </div>
                                                      
                                                    

                                                    <button type="submit" class="btn btn-primary" >Update</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            
                            <td>
                                <% if (book.isDeleted === true) { %>
                                    <form action="/admin/undelete-books/<%= book._id %>" method="POST" class="undelete-form">
                                        <input type="hidden" name="id" value="<%= book._id %>">
                                        <button type="button" class="btn btn-success text-white btn-outline-secondary" onclick="confirmAction(this, 'publish', 'Are you sure you want to publish this book?')">Publish</button>
                                    </form>
                                <% } else { %>
                                    <form action="/admin/delete-books/<%= book._id %>" method="POST" class="delete-form">
                                        <input type="hidden" name="id" value="<%= book._id %>">
                                        <button type="button" class="btn btn-danger text-white btn-outline-secondary" onclick="confirmAction(this, 'delete', 'Are you sure you want to delete this book?')">Delete</button>
                                    </form>
                                <% } %>
                            </td>
                            
                        </tr>
                        <% }); %>
                    </tbody>
                    </table>
                </div>
<nav aria-label="Page navigation example" class="mt-3">
        <ul class="pagination justify-content-center">
            <!-- Previous Page Link -->
            <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page - 1 %>&search=<%= searchQuery %>&genre=<%= genre %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            <!-- Page Number Links -->
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= page === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>&search=<%= searchQuery %>&genre=<%= genre %>"><%= i %></a>
                </li>
            <% } %>

            <!-- Next Page Link -->
            <li class="page-item <%= page >= totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page + 1 %>&search=<%= searchQuery %>&genre=<%= genre %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
                <!-- Add New Product Form -->
                
            </div>
        </div>
    </div>
        
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
   <!-- Include Cropper.js JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Helper function to load the image into a hidden <img> element
    function loadImagePreview(event, imgElement, callback) {
      const file = event.target.files[0];
      if (!file || !file.type.startsWith("image/")) return;

      const reader = new FileReader();
      reader.onload = function(e) {
        imgElement.onload = function() {
          if (typeof callback === "function") {
            callback();
          }
        };
        // Set the image source; the element remains hidden due to its CSS class.
        imgElement.src = e.target.result;
      };
      reader.readAsDataURL(file);
    }

    // Function to initialize Cropper.js for each image input
    function initCropper(inputId, imgViewId, croppedContainerId, croppedImgId, saveButtonId) {
      const input = document.getElementById(inputId);
      const imgView = document.getElementById(imgViewId);
      let cropper = null;

      input.addEventListener("change", function(event) {
        // Load image into the hidden <img>
        loadImagePreview(event, imgView, function() {
          // If a Cropper instance already exists, destroy it
          if (cropper) {
            cropper.destroy();
          }
          // Initialize Cropper.js on the hidden image
          cropper = new Cropper(imgView, {
            aspectRatio: 1,      // Change aspect ratio as needed (e.g., 16/9, 4/3)
            viewMode: 2,         // Restricts the crop box to not exceed the image's size
            autoCropArea: 0.8,   // 80% of the image is set as the default crop area
            responsive: true,
            ready: function () {
              // Show the cropper container when ready
              document.getElementById(croppedContainerId).style.display = "flex";
            }
          });
        });
      });

      // When "Save" is clicked, get the cropped image and display it in the cropped image container.
      document.getElementById(saveButtonId).addEventListener("click", function() {
        if (cropper) {
          const canvas = cropper.getCroppedCanvas();
          const croppedImg = document.getElementById(croppedImgId);
          croppedImg.src = canvas.toDataURL("image/png");
          croppedImg.style.display = "block";
          // Optionally, you can hide the cropper container or destroy the Cropper instance here.
          // For example:
          // document.getElementById(croppedContainerId).style.display = "none";
          // cropper.destroy();
          // cropper = null;
        }
      });
    }

    // Initialize Cropper.js for all 4 images
    initCropper("input1", "imgView1", "croppedContainer1", "croppedImg1", "saveButton1");
    initCropper("input2", "imgView2", "croppedContainer2", "croppedImg2", "saveButton2");
    initCropper("input3", "imgView3", "croppedContainer3", "croppedImg3", "saveButton3");
    initCropper("input4", "imgView4", "croppedContainer4", "croppedImg4", "saveButton4");
  });
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
      // Function to load the image file into the <img> element
      function loadImagePreview(event, imgElement, callback) {
        const file = event.target.files[0];
        if (!file || !file.type.startsWith("image/")) return;
        
        const reader = new FileReader();
        reader.onload = function (e) {
          imgElement.src = e.target.result;
          // Display the image so Cropper.js can initialize properly
          imgElement.style.display = "block";
          // Once the image is fully loaded, execute the callback
          imgElement.onload = function () {
            if (typeof callback === "function") {
              callback();
            }
          };
        };
        reader.readAsDataURL(file);
      }
      
      // Function to initialize Cropper.js for one image input
      function initCropper(inputId, imgViewId, croppedContainerId, croppedImgId, saveButtonId) {
        const input = document.getElementById(inputId);
        const imgView = document.getElementById(imgViewId);
        let cropper = null;
        
        // When a file is selected...
        input.addEventListener("change", function (event) {
          loadImagePreview(event, imgView, function () {
            // Destroy any existing cropper instance
            if (cropper) {
              cropper.destroy();
            }
            // Initialize Cropper.js on the now-visible image element
            cropper = new Cropper(imgView, {
              aspectRatio: 1,      // Change this as needed (e.g., 16/9, 4/3)
              viewMode: 2,         // Constrain the crop box within the image
              autoCropArea: 0.8,   // 80% of the image is used as the default crop box
              responsive: true,
              ready: function () {
                // Show the cropping container once Cropper is ready
                document.getElementById(croppedContainerId).style.display = "flex";
              }
            });
          });
        });
        
        // When the "Save Cropped Image" button is clicked...
        document.getElementById(saveButtonId).addEventListener("click", function () {
          if (cropper) {
            const canvas = cropper.getCroppedCanvas();
            const croppedImg = document.getElementById(croppedImgId);
            // Set the cropped image's source to the cropped canvas data
            croppedImg.src = canvas.toDataURL("image/png");
            croppedImg.style.display = "block";
            // Optionally, hide the cropper image and destroy the instance:
            imgView.style.display = "none";
            cropper.destroy();
            cropper = null;
          }
        });
      }
      
      // Initialize Cropper.js for all four images
      initCropper("input1", "imgView1", "croppedContainer1", "croppedImg1", "saveButton1");
      initCropper("input2", "imgView2", "croppedContainer2", "croppedImg2", "saveButton2");
      initCropper("input3", "imgView3", "croppedContainer3", "croppedImg3", "saveButton3");
      initCropper("input4", "imgView4", "croppedContainer4", "croppedImg4", "saveButton4");
    });
  </script>
  

      
    <!-- <script>
        document.addEventListener("DOMContentLoaded", () => {
          const form = document.querySelector("form");
          const isbnInput = document.getElementById("isbn");
          const titleInput = document.getElementById("title");
          const authorInput = document.getElementById("author");
          const publisherInput = document.getElementById("publisher");
          const formatsInput = document.getElementById("formats");
          const descriptionInput = document.getElementById("description");
          const genreInput = document.getElementById("genre");
          const regularPriceInput = document.querySelector("[name='regularPrice']");
          const salesPriceInput = document.querySelector("[name='salesPrice']");
          const quantityInput = document.querySelector("[name='quantity']");
      
          const errorMessages = {
            isbn: "ISBN cannot be empty and must be 10 or 13 characters.",
            title: "Title cannot be empty.",
            author: "Author cannot be empty.",
            publisher: "Publisher cannot be empty.",
            formats: "Formats cannot be empty.",
            description: "Description cannot be empty.",
            genre: "Please select a genre.",
            regularPrice: "Regular Price must be a valid positive number.",
            salesPrice: "Sales Price must be a valid positive number.",
            quantity: "Stock must be a non-negative number.",
          };
      
          function showError(input, message) {
  if (!input || !input.id) {
    console.error('Invalid input element:', input);
    return;
  }

  const errorDiv = document.getElementById(`${input.id}-error`);
  
  if (!errorDiv) {
    console.error(`Error container not found for: ${input.id}-error`);
    console.log('Current input element:', input);
    return;
  }

  // Only proceed if elements are valid
  errorDiv.textContent = message;
  errorDiv.style.display = "block";
  input.classList.add("is-invalid");
}
      
          function clearError(input) {
            const errorDiv = document.getElementById(`${input.id}-error`);
            errorDiv.textContent = "";
            errorDiv.style.display = "none";
            input.classList.remove("is-invalid");
          }
      
          function validateInput(input, validationFn, errorMessage) {
            const isValid = validationFn(input.value);
            if (!isValid) {
              showError(input, errorMessage);
            } else {
              clearError(input);
            }
            return isValid;
          }
      
          form.addEventListener("submit", (event) => {
            let isValidForm = true;
      
            // Validate ISBN
            isValidForm &= validateInput(
              isbnInput,
              (value) => value.trim().length === 10 || value.trim().length === 13,
              errorMessages.isbn
            );
      
            // Validate Title
            isValidForm &= validateInput(
              titleInput,
              (value) => value.trim().length > 0,
              errorMessages.title
            );
      
            // Validate Author
            isValidForm &= validateInput(
              authorInput,
              (value) => value.trim().length > 0,
              errorMessages.author
            );
      
            // Validate Publisher
            isValidForm &= validateInput(
              publisherInput,
              (value) => value.trim().length > 0,
              errorMessages.publisher
            );
      
            // Validate Formats
            isValidForm &= validateInput(
              formatsInput,
              (value) => value.trim().length > 0,
              errorMessages.formats
            );
      
            // Validate Description
            isValidForm &= validateInput(
              descriptionInput,
              (value) => value.trim().length > 0,
              errorMessages.description
            );
      
            // Validate Genre
            isValidForm &= validateInput(
              genreInput,
              (value) => value !== "",
              errorMessages.genre
            );
      
            // Validate Regular Price
            isValidForm &= validateInput(
              regularPriceInput,
              (value) => !isNaN(value) && parseFloat(value) > 0,
              errorMessages.regularPrice
            );
      
            // Validate Sales Price
            isValidForm &= validateInput(
              salesPriceInput,
              (value) => !isNaN(value) && parseFloat(value) >= 0,
              errorMessages.salesPrice
            );
      
            // Validate Stock
            isValidForm &= validateInput(
              quantityInput,
              (value) => !isNaN(value) && parseInt(value) >= 0,
              errorMessages.quantity
            );
      
            if (!isValidForm) {
              event.preventDefault(); // Prevent form submission if invalid
            }
          });
        });
      </script> -->
      
    <script>
        function deleteImage(imageFileName, bookId) {
            console.log("Image File Name:", imageFileName);
            console.log("Book ID:", bookId);
    
            // Ensure both imageFileName and bookId are valid
            if (!imageFileName || !bookId) {
                console.error("Invalid data:", { imageFileName, bookId });
                alert("Invalid data. Please try again.");
                return;
            }
    
            const confirmation = confirm("Are you sure you want to delete this image?");
            if (confirmation) {
                fetch('/admin/books/delete-image', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        imageNameToServer: imageFileName,
                        bookIdToServer: bookId
                    })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Response Data:', data); // Log response data for debugging
                    if (data.status) {
                        // Successfully deleted
                        const imageElement = document.querySelector(`img[src='/uploads/${imageFileName}']`);
                        if (imageElement) {
                            // Ensure the parent element exists
                            const parentElement = imageElement.closest('.col-md-3');
                            if (parentElement) {
                                parentElement.remove();
                                alert('Image deleted successfully');
                            } else {
                                console.warn('Image element found but no parent element to remove');
                            }
                        } else {
                            console.warn('Image element not found in DOM');
                        }
                    } else {
                        // Error in response
                        console.error('Error:', data.message || data.error);
                        alert(data.message || data.error || 'Error deleting image');
                    }
                })
                .catch(error => {
                    console.error('Error deleting image:', error);
                    alert('Error deleting image');
                });
            }
        }
    </script>
    
    
    
      
      
    <!-- <link  rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css"> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<script>
    function viewImage(event, imgViewId, callback) {
        const imgView = document.getElementById(imgViewId);
        imgView.classList.add('hidden-img');
        
        const file = event.target.files[0];
        if (!file || !file.type.startsWith("image/")) return;

        const reader = new FileReader();
        reader.onload = function (e) {
            imgView.onload = function() {
                if (typeof callback === "function") {
                    callback();
                }
            };
            imgView.src = e.target.result;
            // Ensure image stays hidden
            imgView.style.display = 'none';
        };
        reader.readAsDataURL(file);
    }

    document.addEventListener("DOMContentLoaded", function() {
        function initCropper(inputId, imgViewId, croppedContainerId, croppedImgId, saveButtonId) {
            const input = document.getElementById(inputId);
            const imgView = document.getElementById(imgViewId);
            let cropper = null;

            input.addEventListener("change", function(event) {
                viewImage(event, imgViewId, function() {
                    if (cropper) cropper.destroy();

                    // Create new cropper container
                    const container = document.createElement('div');
                    container.className = 'cropper-container';
                    document.getElementById(croppedContainerId).appendChild(container);

                    cropper = new Cropper(imgView, {
                        aspectRatio: 1,
                        viewMode: 2,
                        autoCropArea: 0.8,
                        responsive: true,
                        container: container, // Use dedicated container
                        ready: function() {
                            document.getElementById(croppedContainerId).style.display = "flex";
                        }
                    });
                });
            });

            document.getElementById(saveButtonId).addEventListener("click", function() {
                if (cropper) {
                    const canvas = cropper.getCroppedCanvas();
                    const croppedImg = document.getElementById(croppedImgId);
                    croppedImg.src = canvas.toDataURL("image/png");
                    croppedImg.style.display = "block";
                    
                    // Cleanup cropper
                    document.getElementById(croppedContainerId).style.display = "none";
                    cropper.destroy();
                    cropper = null;
                    
                    // Remove cropper container elements
                    const container = document.querySelector('.cropper-container');
                    if (container) container.remove();
                }
            });
        }

        // Initialize croppers
        initCropper("input1", "imgView1", "croppedContainer1", "croppedImg1", "saveButton1");
        initCropper("input2", "imgView2", "croppedContainer2", "croppedImg2", "saveButton2");
        initCropper("input3", "imgView3", "croppedContainer3", "croppedImg3", "saveButton3");
        initCropper("input4", "imgView4", "croppedContainer4", "croppedImg4", "saveButton4");
    });
</script>





  
    <script>
        function validateBookForm() {
    clearErrorMessages();
    let isValid = true;

    // Get all input values
    const isbn = document.getElementsByName('isbn')[0].value.trim();
    const title = document.getElementsByName('title')[0].value.trim();
    const author = document.getElementsByName('author')[0].value.trim();
    const publisher = document.getElementsByName('publisher')[0].value.trim();
    const formats = document.getElementsByName('formats')[0].value.trim();
    const genre = document.getElementsByName('books[genre]')[0].value;
    const regularPrice = document.getElementsByName('regularPrice')[0].value.trim();
    const salesPrice = document.getElementsByName('salesPrice')[0].value.trim();
    const stock = document.getElementsByName('quantity')[0].value.trim();
    const description = document.getElementsByName('description')[0].value.trim();
    const images = [
        document.getElementById('croppedImg1').files,
        document.getElementById('croppedImg1').files,
        document.getElementById('croppedImg1').files,
        document.getElementById('croppedImg1').files,
    ];

    // Validate ISBN
    if (!/^\d{10,13}$/.test(isbn)) {
        displayErrorMessage('isbn-error', 'ISBN must be a valid 10-13 digit number.');
        isValid = false;
    }

    // Validate title
    if (title === "") {
        displayErrorMessage('title-error', 'Title is required.');
        isValid = false;
    }

    // Validate author
    if (author === "") {
        displayErrorMessage('author-error', 'Author is required.');
        isValid = false;
    }

    // Validate publisher
    if (publisher === "") {
        displayErrorMessage('publisher-error', 'Publisher is required.');
        isValid = false;
    }

    // Validate formats
    if (formats === "") {
        displayErrorMessage('formats-error', 'Formats are required.');
        isValid = false;
    }

    // Validate genre
    if (genre === "") {
        displayErrorMessage('genre-error', 'Please select a genre.');
        isValid = false;
    }

    // Validate regular price
    if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) <= 0) {
        displayErrorMessage('regularPrice-error', 'Enter a valid positive regular price.');
        isValid = false;
    }

    // Validate sales price
    if (!/^\d+(\.\d{1,2})?$/.test(salesPrice) || parseFloat(salesPrice) < 0) {
        displayErrorMessage('salesPrice-error', 'Enter a valid non-negative sales price.');
        isValid = false;
    } else if (parseFloat(salesPrice) >= parseFloat(regularPrice)) {
        displayErrorMessage('salesPrice-error', 'Sales price must be less than regular price.');
        isValid = false;
    }

    // Validate stock quantity
    if (!/^\d+$/.test(stock) || parseInt(stock) < 0) {
    displayErrorMessage('quantity-error', 'Enter a valid non-negative stock quantity.');
    isValid = false;
} else {
    const stockValue = parseInt(stock);

    if (stockValue === 0) {
        displayOutOfStockMessage(); // Function to handle "Out of Stock"
    } else {
        clearOutOfStockMessage(); // Function to clear "Out of Stock" message
    }

    clearErrorMessage('quantity-error'); // Clear error if input is valid
}

    // Validate description
    if (description === "") {
        displayErrorMessage('description-error', 'Description is required.');
        isValid = false;
    }

    // Validate images
    let imageSelected = false;
    for (let i = 0; i < images.length; i++) {
        if (images[i].length > 0) {
            imageSelected = true;
            break;
        }
    }
    if (!imageSelected) {
        displayErrorMessage('images-error', 'Please upload at least one image.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}
function validateStock() {
    const stockInput = document.getElementById('stockInput');
    const stockError = document.getElementById('quantity-error');
    const stockStatus = document.getElementById('stockStatus');
    const stockValue = parseInt(stockInput.value);

    // Clear any previous error messages
    stockError.style.display = 'none';
    stockError.textContent = '';

    // Validation logic
    if (isNaN(stockValue) || stockValue < 0) {
        stockError.style.display = 'block';
        stockError.textContent = 'Enter a valid non-negative stock quantity.';
        stockStatus.textContent = '';
    } else if (stockValue === 0) {
        stockStatus.textContent = 'Out of Stock';
        stockStatus.classList.remove('text-success');
        stockStatus.classList.add('text-danger');
    } else {
        stockStatus.textContent = 'In Stock';
        stockStatus.classList.remove('text-danger');
        stockStatus.classList.add('text-success');
    }
}


    </script>
    
<script>
    document.addEventListener('DOMContentLoaded', () => {
      const modalImage = document.getElementById('modalImage');
      document.querySelectorAll('.current-image').forEach(image => {
        image.addEventListener('click', function () {
          modalImage.src = this.getAttribute('data-image');
        });
      });
    });
  </script>
<script>
    function handleImageChange(event, index) {
        var input = event.target;
        var file = input.files[0];
        
        if (file) {
            var reader = new FileReader();
            reader.onload = function(e) {
                // Display the image in the preview area
                document.getElementById("imgView" + index).src = e.target.result;

                // Show the cropper container
                document.getElementById("croppedContainer" + index).style.display = "flex";

                // Initialize the cropper for the new image
                var image = document.getElementById("imgView" + index);
                var cropper = new Cropper(image, {
                    aspectRatio: 3 / 2, // Optional: aspect ratio for cropping
                    viewMode: 1, // Restrict the crop area
                    autoCropArea: 1, // 100% of the area will be available for cropping
                    responsive: true
                });

                // Save cropped image
                document.getElementById("saveButton" + index).onclick = function() {
                    var canvas = cropper.getCroppedCanvas();
                    var croppedImage = canvas.toDataURL();
                    document.getElementById("croppedImg" + index).src = croppedImage;
                    input.value = croppedImage; // Attach the cropped image to the file input (for submission)
                };
            };
            reader.readAsDataURL(file);
        }
    }

    // Save the cropped image (to be used when the Save button is clicked)
    function saveCroppedImage(index) {
        // You can modify the saved image as needed before attaching it to the form input
        // The cropped image is now in the hidden <img> element (croppedImg1, croppedImg2, etc.)
        var croppedImage = document.getElementById("croppedImg" + index).src;
        if (croppedImage) {
            // You can perform any additional action here (e.g., set it to a hidden input field)
        }
    }
</script>

    
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmAction(button, action, message) {
        Swal.fire({
            title: 'Confirm Action',
            text: message,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            reverseButtons: true,
        }).then((result) => {
            if (result.isConfirmed) {
                // If confirmed, submit the form
                const form = button.closest('form');
                form.submit();
            } else {
                Swal.fire('Cancelled', `The ${action} action was cancelled.`, 'info');
            }
        });
    }
</script>
<script>

    document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector("form");
  
    form.addEventListener("submit", (event) => {
        let isValid = true;
        
        // Reset all error messages
      document.querySelectorAll(".error-message").forEach((error) => {
        error.textContent = "";
      });
  
      // Validate ISBN
      const isbn = document.getElementById("isbn");
      if (!/^\d{10}|\d{13}$/.test(isbn.value)) {
        isValid = false;
        setError(isbn, "ISBN must be 10 or 13 digits.");
    }
    
    // Validate Title
    const title = document.getElementById("bookName");
    if (title.value.trim() === "") {
        isValid = false;
        setError(title, "Title is required.");
    }
  
      // Validate Author
      const author = document.getElementsByName("author")[0];
      if (author.value.trim() === "") {
        isValid = false;
        setError(author, "Author is required.");
      }
  
      // Validate Publisher
      const publisher = document.getElementById("publisher");
      if (publisher.value.trim() === "") {
        isValid = false;
        setError(publisher, "Publisher is required.");
    }
  
    // Validate Formats
    const formats = document.getElementById("formats");
    if (formats.value.trim() === "") {
        isValid = false;
        setError(formats, "Formats are required.");
    }
    
    // Validate Genre
    const genre = document.getElementById("genre");
    if (genre.value === "") {
        isValid = false;
        setError(genre, "Please select a genre.");
    }
    
    // Validate Prices
      const regularPrice = document.getElementsByName("regularPrice")[0];
      const salesPrice = document.getElementsByName("salesPrice")[0];
      if (!/^\d+(\.\d{1,2})?$/.test(regularPrice.value)) {
        isValid = false;
        setError(regularPrice, "Enter a valid regular price.");
      }
      if (!/^\d+(\.\d{1,2})?$/.test(salesPrice.value)) {
          isValid = false;
          setError(salesPrice, "Enter a valid sales price.");
        }
        
        // Validate Stock
        const stock = document.getElementsByName("quantity")[0];
        if (!/^\d+$/.test(stock.value)) {
        isValid = false;
        setError(stock, "Stock must be a number.");
      }
      
      // Validate Description
      const description = document.getElementsByName("description")[0];
      if (description.value.trim() === "") {
          isValid = false;
          setError(description, "Description is required.");
        }
  
      // Validate Images
      for (let i = 1; i <= 4; i++) {
          const imageInput = document.getElementById(`input${i}`);
          if (imageInput && imageInput.files.length > 0) {
          const file = imageInput.files[0];
          if (!["image/png", "image/jpeg", "image/jpg"].includes(file.type)) {
            isValid = false;
            setError(imageInput, "Invalid image format. Only PNG, JPEG, and JPG are allowed.");
        }
    }
}

if (!isValid) {
    event.preventDefault();
}
});

// Helper function to set error
function setError(element, message) {
    const errorDiv = element.closest(".mb-3")?.querySelector(".error-message");
    if (errorDiv) {
        errorDiv.textContent = message;
    } else {
        const newErrorDiv = document.createElement("div");
        newErrorDiv.classList.add("error-message");
        newErrorDiv.style.color = "red";
        newErrorDiv.textContent = message;
        element.closest(".mb-3").appendChild(newErrorDiv);
    }
    }
});
  

</script>
<!-- Cropper.js CSS -->

<!-- Cropper.js JavaScript -->



<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>