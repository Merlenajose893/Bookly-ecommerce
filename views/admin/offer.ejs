<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- <link rel="stylesheet" href="/css/style.css"> -->
    <link rel="stylesheet" href="/css/bookss.css">
    <style>
        .error {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar">
                <h3 class="mb-4">Bookly</h3>
                <nav class="nav flex-column">
                    <a class="nav-link" href="/admin">Dashboard</a>
                    <a class="nav-link" href="/admin/usermanage">User Management</a>
                    <a class="nav-link" href="/admin/books">Book Management</a>
                    <a class="nav-link" href="/admin/genres">Category Management</a>
                    <a class="nav-link" href="/admin/adminorders">Order Management</a>
                    <a class="nav-link" href="/admin/coupon">Coupon Management</a>
                    <a class="nav-link active" href="/admin/offer">Offer Management</a>
                    <a class="nav-link" href="/admin/logout">Logout</a>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="col-md-10 main-container">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <!-- search form -->
                    <form 
                      class="d-flex w-50" 
                      method="GET" 
                      action="/admin/offer"         
                    >
                      <div class="input-group">
                        <input
                          type="text"
                          class="form-control"
                          name="search"
                          value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
                          placeholder="Search by offer type, discount type, or code"
                        />
                        <button class="btn btn-outline-secondary" type="submit" aria-label="Search offers">
                          <i class="fas fa-search"></i>
                        </button>
                      </div>
                    </form>
                  
                    <!-- createâ€‘offer button -->
                    <button
                      type="button"
                      class="btn btn-primary"
                      data-bs-toggle="modal"
                      data-bs-target="#offerModal"
                    >
                      Create Offer
                    </button>
                  </div>
                  
                  

                <!-- Create Offer Modal -->
                <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Add Offer</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <form action="/admin/offer" method="POST">
                                    <div class="mb-3">
                                        <label class="form-label">Offer Type</label>
                                        <select class="form-control" name="offerType" >
                                            <option value="">Select Offer Type</option>
                                            <option value="Product">Product</option>
                                            <option value="Category">Category</option>
                                          
                                        </select>
                                    </div>
                            
                                    <div class="mb-3" id="productField" style="display: none;">
                                        <label class="form-label">Select Product</label>
                                        <select class="form-control" name="product" id="productDropdown">
                                            <option value="" disabled selected>Select a product</option>
                                            <% books.forEach(book => { %>
                                                <option value="<%= book._id %>"><%= book.title %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                            
                                    <div class="mb-3" id="categoryField" style="display: none;">
                                        <label class="form-label">Select Category</label>
                                        <select class="form-control" name="category">
                                            <option value="">-- Select a Category --</option>
                                            <% genres.forEach(genre => { %>
                                                <option value="<%= genre._id %>"><%= genre.name %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                                    
                            
                                  
                            
                                    <div class="mb-3">
                                        <label class="form-label">Discount Type</label>
                                        <select class="form-control" name="discountType" >
                                            <option value="">Select Discount Type</option>
                                            <option value="Percentage">Percentage</option>
                                            <option value="Fixed">Fixed Amount</option>
                                        </select>
                                    </div>
                            
                                    <div class="mb-3">
                                        <label class="form-label">Discount Value</label>
                                        <input type="number" class="form-control" name="discountValue" min="1" >
                                    </div>
                            
                                    <div class="mb-3">
                                        <label class="form-label">Valid From</label>
                                        <input type="date" class="form-control" name="startDate" >
                                    </div>
                            
                                    <div class="mb-3">
                                        <label class="form-label">Valid To</label>
                                        <input type="date" class="form-control" name="endDate" >
                                    </div>
                            
                                    <div class="mb-3">
                                        <label class="form-label">Is Active?</label>
                                        <select class="form-control" name="isActive">
                                            <option value="true">Yes</option>
                                            <option value="false">No</option>
                                        </select>
                                    </div>
                            
                                    <button type="submit" class="btn btn-success">Save Offer</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Offers Table -->
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Offer Name</th>
                                <th>Discount (%)</th>
                                <th>Valid From</th>
                                <th>Valid To</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% offers.forEach(offer => { %>
                                <tr>
                                    <td><%= offer.offerType %></td>
                                    <td><%= offer.discountValue %>%</td>
                                    <td><%= new Date(offer.startDate).toLocaleDateString('en-GB') %></td>

                                    <td><%= new Date(offer.endDate).toLocaleDateString('en-GB') %></td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editOfferModal<%= offer._id %>">Edit</button>
                                        <button class="btn btn-danger btn-sm" onclick="toggleOfferStatus('<%= offer._id %>', this)">
                                            <%= offer.isActive ? 'Deactivate' : 'Activate' %>
                                        </button>
                                    </td>
                                </tr>

                                <!-- Edit Offer Modal -->
                                <div class="modal fade" id="editOfferModal<%= offer._id %>" tabindex="-1" aria-labelledby="editOfferModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered">
                                      <div class="modal-content shadow">
                                        <div class="modal-header bg-light">
                                          <h5 class="modal-title fw-bold">Edit Offer</h5>
                                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body p-4" id="offerModel">
                                          <form action="/admin/offer/edit/<%= offer._id %>" method="POST" id="editOfferForm">
                                            <!-- Offer Type Section -->
                                            <div class="mb-4">
                                              <label class="form-label fw-semibold">Offer Type</label>
                                              <select name="offerType" class="form-select" id="offerTypeSelect">
                                                <option value="Product" <%= offer.offerType === 'Product' ? 'selected' : '' %>>Product</option>
                                                <option value="Category" <%= offer.offerType === 'Category' ? 'selected' : '' %>>Category</option>
                                              
                                              </select>
                                            </div>
                                            
                                            <!-- Product Selection - Shown conditionally -->
                                            <div class="mb-4 <%= offer.offerType === 'Product' ? '' : 'd-none' %>" id="productSection">
                                              <label class="form-label fw-semibold">Select Product</label>
                                              <select name="product" class="form-select">
                                                <% books.forEach(book => { %>
                                                  <option value="<%= book._id %>" <%= book._id.equals(offer.book) ? 'selected' : '' %>><%= book.title %></option>
                                                <% }); %>
                                              </select>
                                            </div>
                                            
                                            <!-- Category Selection - Shown conditionally -->
                                            <div class="mb-4 <%= offer.offerType === 'Category' ? '' : 'd-none' %>" id="categorySection">
                                              <label class="form-label fw-semibold">Select Category</label>
                                              <select name="category" class="form-select">
                                                <% genres.forEach(genre => { %>
                                                  <option value="<%= genre._id %>" <%= genre._id.equals(offer.genre) ? 'selected' : '' %>><%= genre.name %></option>
                                                <% }); %>
                                              </select>
                                            </div>
                                            
                                            <!-- Referral Code - Shown conditionally -->
                                          
                                            
                                            <hr class="my-4">
                                            
                                            <!-- Discount Information -->
                                            <div class="row g-3 mb-4">
                                              <div class="col-md-6">
                                                <label class="form-label fw-semibold">Discount Type</label>
                                                <select name="discountType" class="form-select">
                                                  <option value="Percentage" <%= offer.discountType === 'Percentage' ? 'selected' : '' %>>Percentage (%)</option>
                                                  <option value="Fixed" <%= offer.discountType === 'Fixed' ? 'selected' : '' %>>Fixed Amount</option>
                                                </select>
                                              </div>
                                              <div class="col-md-6">
                                                <label class="form-label fw-semibold">Discount Value</label>
                                                <div class="input-group">
                                                  <input type="number" name="discountValue" class="form-control" value="<%= offer.discountValue %>" min="0">
                                                  <span class="input-group-text" id="discountSymbol"><%= offer.discountType === 'Percentage' ? '%' : '$' %></span>
                                                </div>
                                              </div>
                                            </div>
                                            
                                            <!-- Date Range Selection -->
                                            <div class="row g-3 mb-4">
                                              <div class="col-md-6">
                                                <label class="form-label fw-semibold">Start Date</label>
                                                <input type="date" name="startDate" class="form-control" value="<%= new Date(offer.startDate).toISOString().split('T')[0] %>">
                                              </div>
                                              <div class="col-md-6">
                                                <label class="form-label fw-semibold">End Date</label>
                                                <input type="date" name="endDate" class="form-control" value="<%= new Date(offer.endDate).toISOString().split('T')[0] %>">
                                              </div>
                                            </div>
                                            
                                            <!-- Active Status -->
                                            <div class="mb-4">
                                              <label class="form-label fw-semibold">Status</label>
                                              <div class="form-check form-switch">
                                                <input class="form-check-input" type="checkbox" name="isActive" value="true" id="statusSwitch" <%= offer.isActive ? 'checked' : '' %>>
                                                <label class="form-check-label" for="statusSwitch">
                                                  <span class="text-success <%= offer.isActive ? '' : 'd-none' %>" id="activeText">Active</span>
                                                  <span class="text-secondary <%= offer.isActive ? 'd-none' : '' %>" id="inactiveText">Inactive</span>
                                                </label>
                                              </div>
                                            </div>
                                            
                                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                              <button type="button" class="btn btn-outline-secondary me-md-2" data-bs-dismiss="modal">Cancel</button>
                                              <button type="submit" class="btn btn-primary">Save Changes</button>
                                            </div>
                                          </form>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  
                            <% }) %>
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav>
                    <ul class="pagination justify-content-center">
                        <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= page - 1 %>">&laquo;</a>
                        </li>
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= page === i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                        <li class="page-item <%= page >= totalPages ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= page + 1 %>">&raquo;</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    // Target the specific form in the modal instead of any form
    const form = document.querySelector("#offerModal form");
    
    if (!form) return; // Guard clause if form doesn't exist
    
    const offerTypeSelect = form.querySelector("[name='offerType']");
    const productField = document.getElementById("productField");
    const categoryField = document.getElementById("categoryField");
    // const referralField = document.getElementById("referralField");
    const productDropdown = form.querySelector("[name='product']");
    const categoryDropdown = form.querySelector("[name='category']");
    // const referralInput = form.querySelector("[name='referralCode']");
    const discountType = form.querySelector("[name='discountType']");
    const discountValue = form.querySelector("[name='discountValue']");
    const startDateInput = form.querySelector("[name='startDate']");
    const endDateInput = form.querySelector("[name='endDate']");

    function showError(input, message) {
        let errorSpan = input.nextElementSibling;
        if (!errorSpan || !errorSpan.classList.contains("error")) {
            errorSpan = document.createElement("span");
            errorSpan.classList.add("error");
            input.parentNode.appendChild(errorSpan);
        }
        errorSpan.textContent = message;
    }

    function clearError(input) {
        let errorSpan = input.nextElementSibling;
        if (errorSpan && errorSpan.classList.contains("error")) {
            errorSpan.textContent = "";
        }
    }

    offerTypeSelect.addEventListener("change", function () {
        productField.style.display = this.value === "Product" ? "block" : "none";
        categoryField.style.display = this.value === "Category" ? "block" : "none";
        referralField.style.display = this.value === "Referral" ? "block" : "none";
        clearError(offerTypeSelect);
    });

    form.addEventListener("submit", async function (event) {
    
        event.preventDefault();
        console.log("Form submission triggered");

        let isValid = true;
        form.querySelectorAll(".error").forEach(error => error.textContent = "");
        
        const offerType = offerTypeSelect.value;
        if (offerType === "") {
            showError(offerTypeSelect, "Please select an Offer Type.");
            isValid = false;
        } else if (offerType === "Product" && (!productDropdown || !productDropdown.value)) {
            showError(productDropdown, "Please select a Product.");
            isValid = false;
        } else if (offerType === "Category" && (!categoryDropdown || !categoryDropdown.value)) {
            showError(categoryDropdown, "Please select a Category.");
            isValid = false;
        // } else if (offerType === "Referral" && (!referralInput || referralInput.value.trim() === "")) {
        //     showError(referralInput, "Please enter a Referral Code.");
        //     isValid = false;
        // }

        if (!discountType || discountType.value === "") {
            showError(discountType, "Please select a Discount Type.");
            isValid = false;
        } else {
            clearError(discountType);
        }

        if (!discountValue || discountValue.value <= 0 || isNaN(discountValue.value) || discountValue.value > 100) {
            showError(discountValue, "Please enter a valid Discount Value between 1 and 100.");
            isValid = false;
        } else {
            clearError(discountValue);
        }

        const today = new Date().toISOString().split("T")[0];
        if (!startDateInput || !startDateInput.value) {
            showError(startDateInput, "Please select a Start Date.");
            isValid = false;
        } else if (startDateInput.value < today) {
            showError(startDateInput, "Start Date cannot be in the past.");
            isValid = false;
        } else {
            clearError(startDateInput);
        }

        if (!endDateInput || !endDateInput.value) {
            showError(endDateInput, "Please select an End Date.");
            isValid = false;
        } else if (endDateInput.value <= startDateInput.value) {
            showError(endDateInput, "End Date must be after the Start Date.");
            isValid = false;
        } else {
            clearError(endDateInput);
        }

        if (!isValid) {
            console.log("Validation failed");
            return;
        }

        console.log("Form is valid, proceeding with submission");
        
        // Convert FormData to a standard object
        const formData = new FormData(form);
        const formDataObj = Object.fromEntries(formData.entries());
        
        try {
            const response = await fetch('/admin/offer', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(formDataObj)
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: "success",
                    title: "Offer saved!",
                    text: result.message || "Your offer has been saved successfully.",
                    confirmButtonColor: "#3085d6"
                }).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Failed to save!",
                    text: result.message || "Something went wrong.",
                    confirmButtonColor: "#d33"
                });
            }
        } catch (err) {
            console.error("Fetch error:", err);
            Swal.fire({
                icon: "error",
                title: "Oops!",
                text: "An error occurred while submitting the form.",
                confirmButtonColor: "#d33"
            });
        }
    });
});
</script>

    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const editForm = document.querySelector('#editOfferForm');
    
        if (editForm) {
            editForm.addEventListener('submit', async (e) => {
                e.preventDefault();
    
                const formData = new FormData(editForm);
                const formObject = Object.fromEntries(formData.entries());
    
                const { offerType, discountType, discountValue, startDate, endDate } = formObject;
    
                if (!offerType || !discountType || !discountValue || !startDate || !endDate) {
                    return Swal.fire({
                        icon: 'warning',
                        title: 'Missing Fields',
                        text: 'Please fill all required fields.'
                    });
                }
    
                const today = new Date().toISOString().split("T")[0];
                if (new Date(startDate) < new Date(today)) {
                    return Swal.fire({
                        icon: 'error',
                        title: 'Invalid Start Date',
                        text: 'Start Date cannot be in the past.'
                    });
                }
    
                if (new Date(endDate) <= new Date(startDate)) {
                    return Swal.fire({
                        icon: 'error',
                        title: 'Invalid End Date',
                        text: 'End Date must be after the Start Date.'
                    });
                }
    
                const actionURL = editForm.getAttribute('action');
    
                try {
                    const response = await fetch(actionURL, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formObject)
                    });
    
                    const data = await response.json();
                    console.log("Server Response:", data);  // Debug log
    
                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message || 'Offer updated successfully',
                            confirmButtonText: 'OK'
                        });
    
                        if (data.redirectUrl) {
                            window.location.href = data.redirectUrl;
                        }
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Update Failed',
                            text: data.message || "Something went wrong."
                        });
                    }
                } catch (err) {
                    console.error("Fetch Error:", err);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong. Please try again later.'
                    });
                }
            });
        }
    });
    </script>
    
    
    
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <script>
    async function toggleOfferStatus(offerId, button) {
      try {
        const response = await fetch(`/admin/offer/toggle/${offerId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" }
        });
        const data = await response.json();
        if (data.success) {
          let newState;
          if (button.textContent.trim() === "Activate") {
            newState = true;
          } else {
            newState = false;
          }
          Swal.fire({
            title: "Success!",
            text: newState ? "Offer Activated" : "Offer Deactivated",
            icon: "success",
            timer: 1500,
            showConfirmButton: false
          });
          button.textContent = newState ? "Deactivate" : "Activate";
          if (newState) {
            button.classList.remove("btn-danger");
            button.classList.add("btn-success");
          } else {
            button.classList.remove("btn-success");
            button.classList.add("btn-danger");
          }
        } else {
          Swal.fire({
            title: "Error!",
            text: data.message || "Operation failed.",
            icon: "error"
          });
        }
      } catch (error) {
        Swal.fire({
          title: "Error!",
          text: "Something went wrong. Please try again.",
          icon: "error"
        });
        console.error("Error toggling offer status:", error);
      }
    }
  </script>
  
  
  
  
  
  
  
  
  
  
  
    <script>
        function toggleFields() {
            let offerType = document.getElementById('offerType').value;
            
            document.getElementById('productField').style.display = (offerType === 'Product') ? 'block' : 'none';
            document.getElementById('categoryField').style.display = (offerType === 'Category') ? 'block' : 'none';
            document.getElementById('referralField').style.display = (offerType === 'Referral') ? 'block' : 'none';
        }
    
        window.onload = toggleFields;
    </script>
 
 <!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> -->
 <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.2/sweetalert2.all.min.js"></script>
 <script>
    document.addEventListener('DOMContentLoaded', function() {
      const offerSearchInput = document.getElementById('offerSearchInput');
      
      offerSearchInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          const query = offerSearchInput.value.trim();
          const targetUrl = '/admin/offer?search=' + encodeURIComponent(query) + '&page=1';
          window.location.href = targetUrl;
        }
      });
    });
    </script>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        // Debug edit buttons
        const editButtons = document.querySelectorAll('[data-bs-toggle="modal"][data-bs-target^="#editOfferModal"]');
        console.log('Found', editButtons.length, 'edit buttons');
        
        editButtons.forEach(button => {
            button.addEventListener('click', function() {
                console.log('Edit button clicked: ', this.getAttribute('data-bs-target'));
            });
        });
        
        // Rest of your existing DOMContentLoaded code
    });
    </script>
    </body>
</html>
